import { useState, useMemo } from 'react'
// memo를 써서 filter, pokemon 어디가 바뀌든 새로운 filter를 제공한다.
import Head from 'next/head'
// import Image from 'next/image'
import styles from '../styles/Home.module.css'

interface Pokemon {
  id: number
  name: string
  image: string
}

// serverside props function 함수명이 지정되어 있음.
export async function getServerSideProps() {
  const resp = await fetch(
    'https://jherr-pokemon.s3.us-west-1.amazonaws.com/index.json'
  )

  return {
    props: {
      pokemon: await resp.json(),
    },
  }
}

// 자동으로 생성된 pokemon props 를 가지고 올수 있구나.
export default function Home({ pokemon }: { pokemon: Pokemon[] }) {
  // return <div className={styles.container}>{JSON.stringify(pokemon)}</div>

  const [filter, setFilter] = useState('')

  const filteredPokemon = useMemo(
    () =>
      pokemon.filter((p) =>
        p.name.toLowerCase().includes(filter.toLowerCase())
      ),
    [filter, pokemon]
    // filter, pokemon 둘 중 뭐가 바뀌어도 pokemon은 바뀌지 않아 리렌더링 되지 않음.
    // search 에 일반적인 useCase 임. 기억할 것.
  )
  return (
    <div className={styles.main}>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <input
          type="text"
          value={filter}
          onChange={(e) => setFilter(e.target.value)}
          className={styles.search}
        />
      </div>
      <div className={styles.container}>
        {filteredPokemon.slice(0, 20).map((p) => (
          <div key={p.id} className={styles.image}>
            <img
              src={`https://jherr-pokemon.s3.us-west-1.amazonaws.com/${p.image}`}
              alt="{p.name}"
            />
            <h2>{p.name}</h2>
          </div>
        ))}
      </div>
    </div>
  )
}
